name: build

on:
  push:
    branches:
    - master
    - release-*
    - gh-actions

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dart_version: [2.2.0, latest]
        platform: [vm, chrome]
    env:
      DART_SDK: /usr/lib/dart
    
    steps:
    - uses: actions/checkout@v1
    - name: Install Dart SDK
      run: cd .github/scripts && chmod +x install_dart.sh && sudo ./install_dart.sh ${{ matrix.dart_version }}
    - name: Install dependencies
      run: |
        PATH=${PATH}:${DART_SDK}/bin
        pub get
    - name: Run tests
      run: |
        PATH=${PATH}:${DART_SDK}/bin
        xvfb-run -a pub run test -p ${{ matrix.platform }}

  coverage:
    name: Test coverage
    needs: test
    runs-on: ubuntu-latest
    env:
      DART_SDK: /usr/lib/dart

    steps:
    - uses: actions/checkout@v1
    - name: Install Dart SDK
      run: cd .github/scripts && chmod +x install_dart.sh && sudo ./install_dart.sh latest
    - name: Install dependencies
      run: |
        PATH=${PATH}:${DART_SDK}/bin
        pub get
    - name: Analyse code coverage
      run: |
        PATH=${PATH}:${DART_SDK}/bin
        alias chrome="google-chrome"
        pub run covered -p vm,chrome --headless --report-on=lib
    - name: Upload coverage report to Codecov.io
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: .covered/reports/lcov_merged.info

  analyse:
    name: Code analysis
    runs-on: ubuntu-latest

    container:
      image:  google/dart:latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: pub get
    - name: Run analyser
      run: dartanalyzer lib test example

  format:
    name: Code format
    runs-on: ubuntu-latest

    container:
      image:  google/dart:latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Checking format
      run: dartfmt -n .
